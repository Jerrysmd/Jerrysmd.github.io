<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Technology - Category - JerrysBlog</title><link>https://jerrysmd.github.io/categories/technology/</link><description>Technology - Category - JerrysBlog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 30 Dec 2023 16:55:12 +0800</lastBuildDate><atom:link href="https://jerrysmd.github.io/categories/technology/" rel="self" type="application/rss+xml"/><item><title>Striking a Balance Between Speed and Compression Ratio: The Relationship Between Compression Algorithms and Formats</title><link>https://jerrysmd.github.io/20231230_compression-algorithms-and-formats/</link><pubDate>Sat, 30 Dec 2023 16:55:12 +0800</pubDate><author/><guid>https://jerrysmd.github.io/20231230_compression-algorithms-and-formats/</guid><description>&lt;p>Some common compression formats include zip, rar, and 7z. Common compression algorithms include gzip, brotli, zstd, lz4, pigz, isa-l, and pzstd. However, what are the relationships between these? How can one strike a balance between compression speed and ratio? What is the relationship between compression algorithms and formats?&lt;/p></description></item><item><title>Exploring JDK 21 New Feature: Virtual Threads</title><link>https://jerrysmd.github.io/20231104_jdk21-new-feature/</link><pubDate>Sat, 04 Nov 2023 15:17:37 +0800</pubDate><author/><guid>https://jerrysmd.github.io/20231104_jdk21-new-feature/</guid><description>&lt;p>JDK 21, the latest LTS release of OpenJDK, introduces an exciting new feature called Virtual Threads. In this blog post, we will delve into the details of this feature and explore how it enhances the scalability and performance of concurrent applications.&lt;/p></description></item><item><title>Tracking SQLite Database Changes in Git</title><link>https://jerrysmd.github.io/20231103_track-sqlite-changes/</link><pubDate>Fri, 03 Nov 2023 07:13:59 +0800</pubDate><author/><guid>https://jerrysmd.github.io/20231103_track-sqlite-changes/</guid><description><![CDATA[<p>SQLite stores data in binary. If you run <code>cat mydb.sqlite</code>, you&rsquo;ll see a bunch of gibberish that doesn&rsquo;t resemble structured data at all. If you want to track changes and updates to a database using Git, you won&rsquo;t be able to see full diffs by default.</p>]]></description></item><item><title>Color Grading DJI D-Cinelike Footage in DaVinci Resolve</title><link>https://jerrysmd.github.io/20231102_davinci-color-grading/</link><pubDate>Thu, 02 Nov 2023 08:14:18 +0800</pubDate><author/><guid>https://jerrysmd.github.io/20231102_davinci-color-grading/</guid><description>&lt;p>This blog post will focus on color grading in DaVinci Resolve. It will introduce DJI&amp;rsquo;s D-Cinelike, D-Log color profiles, Sony camera S-Log, and explain the differences between these log formats and normal color profiles. The goal is to provide a tutorial for colorists on how to get the most out of log footage when color grading in DaVinci Resolve.&lt;/p></description></item><item><title>Vector Databases: Comparison for Semantic Search and Retrieval-Augmented Generation</title><link>https://jerrysmd.github.io/20231007_vector-database/</link><pubDate>Sat, 07 Oct 2023 10:29:03 +0800</pubDate><author/><guid>https://jerrysmd.github.io/20231007_vector-database/</guid><description>&lt;p>In an era where semantic search and retrieval-augmented generation (RAG) are redefining our online interactions, the backbone supporting these advancements is often overlooked: vector databases. If you&amp;rsquo;re diving into applications like large language models, RAG, or any platform leveraging semantic search.&lt;/p></description></item><item><title>Comprehensive Guide to Integrating Swagger with Spring</title><link>https://jerrysmd.github.io/20230925_swagger-intro/</link><pubDate>Mon, 25 Sep 2023 11:46:06 +0800</pubDate><author/><guid>https://jerrysmd.github.io/20230925_swagger-intro/</guid><description>&lt;p>In the development process, the interface documentation is a crucial part. It not only facilitates developers in viewing and understanding the functionality and parameters of the interfaces but also helps in coordinating the work between the front-end and back-end development, thereby improving development efficiency. This article will introduce how to use Swagger in Spring Boot to automatically generate interface documentation.&lt;/p></description></item></channel></rss>