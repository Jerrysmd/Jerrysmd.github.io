<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Tuning - Tag - JerrysBlog</title><link>https://jerrysmd.github.io/tags/tuning/</link><description>Tuning - Tag - JerrysBlog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 19 Jul 2022 14:54:16 +0800</lastBuildDate><atom:link href="https://jerrysmd.github.io/tags/tuning/" rel="self" type="application/rss+xml"/><item><title>Spark Performance Tuning</title><link>https://jerrysmd.github.io/20220719_spark-optimization/</link><pubDate>Tue, 19 Jul 2022 14:54:16 +0800</pubDate><author><name>Author</name></author><guid>https://jerrysmd.github.io/20220719_spark-optimization/</guid><description>&lt;p>Spark SQL is the top active component in spark 3.0 release. Most of the resolved tickets are for Spark SQL. These enhancements benefit all the higher-level libraries, including structured streaming and MLlib, and higher level APIs, including SQL and DataFrames. Various related optimizations are added in latest release.&lt;/p></description></item><item><title>Flink Performance Tuning</title><link>https://jerrysmd.github.io/20210623_flink-optimize/</link><pubDate>Wed, 23 Jun 2021 10:32:19 +0800</pubDate><author><name>Author</name></author><guid>https://jerrysmd.github.io/20210623_flink-optimize/</guid><description>&lt;p>Flink optimization includes resource configuration optimization, back pressure processing, data skew, KafkaSource optimization and FlinkSQL optimization.&lt;/p></description></item><item><title>Data Warehouse: Offline Tuning</title><link>https://jerrysmd.github.io/20210108_dw-behavior-collection/</link><pubDate>Fri, 08 Jan 2021 09:43:01 +0800</pubDate><author><name>Author</name></author><guid>https://jerrysmd.github.io/20210108_dw-behavior-collection/</guid><description>&lt;p>Data warehouse is a system that pulls together data derived from operational systems and external data sources within an organization for reporting and analysis. A data warehouse is a central repository of information that provides users with current and historical decision support information.&lt;/p></description></item><item><title>Hbase Performance Tuning</title><link>https://jerrysmd.github.io/20201026_hbase-optimize/</link><pubDate>Mon, 26 Oct 2020 09:14:35 +0800</pubDate><author><name>Author</name></author><guid>https://jerrysmd.github.io/20201026_hbase-optimize/</guid><description>&lt;p>HBase is a high reliability, high performance, column-oriented, and scalable distributed database. However, the READ/write performance deteriorates when a large amount of concurrent data or existing data is generated. You can use the following methods to improve the HBase search speed.&lt;/p></description></item><item><title>C Project Performance Tuning</title><link>https://jerrysmd.github.io/20190409_cperformance-optimization/</link><pubDate>Tue, 09 Apr 2019 20:04:00 +0800</pubDate><author><name>Author</name></author><guid>https://jerrysmd.github.io/20190409_cperformance-optimization/</guid><description>&lt;p>Performance optimization methods and ideas for large C projects. Performance optimization strategies for x86 projects that encounter performance bottlenecks when porting to low performance processors.&lt;/p></description></item></channel></rss>