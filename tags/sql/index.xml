<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sql on JerrysBlog</title>
    <link>https://jerrysmd.github.io/tags/sql/</link>
    <description>Recent content in sql on JerrysBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 07 Nov 2020 14:55:59 +0800</lastBuildDate><atom:link href="https://jerrysmd.github.io/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Clickhouse Introduction</title>
      <link>https://jerrysmd.github.io/post/20201107_clickhouse_intro/</link>
      <pubDate>Sat, 07 Nov 2020 14:55:59 +0800</pubDate>
      
      <guid>https://jerrysmd.github.io/post/20201107_clickhouse_intro/</guid>
      <description>
        
          
            &lt;p&gt;A high performance columnar OLAP database management system for real-time analytics using SQL. ClickHouse can be customized with a new set of efficient columnar storage engines, and has realized rich functions such as data ordered storage, primary key indexing, sparse indexing, data sharding, data partitioning, TTL, and primary and backup replication.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>SQLcipher Guide</title>
      <link>https://jerrysmd.github.io/post/20181118_sqlcipher/</link>
      <pubDate>Sun, 18 Nov 2018 21:58:51 -0800</pubDate>
      
      <guid>https://jerrysmd.github.io/post/20181118_sqlcipher/</guid>
      <description>
        
          
            &lt;p&gt;SQLCipher is based on SQLite, and thus, the majority of the accessible API is identical to the C/C++ interface for SQLite 3. However, SQLCipher does add a number of security specific extensions in the form of PRAGMAs, SQL Functions and C Functions.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>SQL Introduction</title>
      <link>https://jerrysmd.github.io/post/20181017_sqlintroduction/</link>
      <pubDate>Wed, 17 Oct 2018 11:52:36 +0800</pubDate>
      
      <guid>https://jerrysmd.github.io/post/20181017_sqlintroduction/</guid>
      <description>
        
          
            &lt;p&gt;In computer programming, create, read, update, and delete (CRUD) are the four basic functions of persistent storage. Alternate words are sometimes used when defining the four basic functions of CRUD, such as retrieve instead of read, modify instead of update, or destroy instead of delete. CRUD is also sometimes used to describe user interface conventions that facilitate viewing, searching, and changing information, often using computer-based forms and reports.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
