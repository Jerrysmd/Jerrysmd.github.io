<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>database on JerrysBlog</title>
    <link>https://jerrysmd.github.io/tags/database/</link>
    <description>Recent content in database on JerrysBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 15 Dec 2020 10:47:59 +0800</lastBuildDate><atom:link href="https://jerrysmd.github.io/tags/database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Parquet Format</title>
      <link>https://jerrysmd.github.io/post/20201215_parquet-format/</link>
      <pubDate>Tue, 15 Dec 2020 10:47:59 +0800</pubDate>
      
      <guid>https://jerrysmd.github.io/post/20201215_parquet-format/</guid>
      <description>
        
          
            &lt;p&gt;Apache Parquet is designed for efficient as well as performant flat columnar storage format of data compared to row based files like CSV or TSV files. Parquet uses the record shredding and assembly algorithm which is superior to simple flattening of nested namespaces. Parquet is optimized to work with complex data in bulk and features different ways for efficient data compression and encoding types. This approach is best especially for those queries that need to read certain columns from a large table. Parquet can only read the needed columns therefore greatly minimizing the IO.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Clickhouse Introduction</title>
      <link>https://jerrysmd.github.io/post/20201107_clickhouse-intro/</link>
      <pubDate>Sat, 07 Nov 2020 14:55:59 +0800</pubDate>
      
      <guid>https://jerrysmd.github.io/post/20201107_clickhouse-intro/</guid>
      <description>
        
          
            &lt;p&gt;A high performance columnar OLAP database management system for real-time analytics using SQL. ClickHouse can be customized with a new set of efficient columnar storage engines, and has realized rich functions such as data ordered storage, primary key indexing, sparse indexing, data sharding, data partitioning, TTL, and primary and backup replication.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
